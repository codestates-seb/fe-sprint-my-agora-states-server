const noticedata = [
  {
    id: "D_kwDOHOApLM4APXZy",
    createdAt: "2022-04-22T17:47:35Z",
    title: "좋은 답변하는 법",
    url: "https://github.com/codestates-seb/agora-states-fe/discussions/6",
    author: "kimploo",
    answer: null,
    bodyHTML:
      '<h2 dir="auto">수강생/수료생의 좋은 답변을 환영합니다.</h2>\n<h2 dir="auto">왜 좋은 답변을 할 줄 알아야 하나요?</h2>\n<h3 dir="auto">실력이 뛰어난 개발자는 정확하게 답변하기 때문입니다.</h3>\n<blockquote>\n<p dir="auto">... there also were less expected findings. In particular, the importance of social skills was highlighted, even for so technical a task as code reading.<br>\n(잘 알려진 바와 다르게,) 기대한 것과 다른 연구 결과를 찾을 수도 있었다. 특이하게도, 코드 해석과 같은 아주 기술적인 업무에서도 사회적 스킬의 중요성이 강조되었다.</p>\n<ul dir="auto">\n<li><a href="https://link.springer.com/chapter/10.1007/BFb0024298" rel="nofollow">What we have learned about software engineering expertise</a></li>\n</ul>\n</blockquote>\n<p dir="auto">좋은 질문하는 방법과 같은 인용문입니다. 소프트웨어 개발 전문가에 대한 많은 연구에서는 개발자의 사회적인 측면을 강조합니다. 자기가 잘 모르는 내용에 대해서 부드럽게 물어볼 수 있고, 동료나 후배 개발자에게 자기가 아는 내용에 대해서 긍정적인 피드백을 줄 수 있는 개발자가 실제 성과도 뛰어납니다. 답변에도 똑같이 적용되는 사례죠? 여러분의 동기나 후배 수강생들이 보고 배울 수 있을 만한 좋은 답변을 작성해봅시다.</p>\n<h3 dir="auto">내가 진짜 잘 아는지 확인할 수 있기 때문입니다.</h3>\n<p dir="auto">해외 유명 커뮤니티 Reddit에는 <a href="https://www.reddit.com/r/explainlikeimfive/" rel="nofollow">ELI5(Explain Like I\'m Five)라는 공간</a>이 있습니다. "내가 5살이라고 생각하고, 나에게 설명을 해줄레?"라는 의미인데요. 유머러스한 내용도 많이 있지만, 정말 유용한 답변도 찾을 수 있습니다. 이제 막 언어를 알게 된 아이에게 전문 지식을 설명해야 하는 경우, 전문 용어를 전부 배제하고 설명해야 합니다. 그렇게 설명하면 설명할수록 신기하게도 질문의 핵심과 관련된 이야기만 하게 됩니다.</p>\n<p dir="auto">여러분도 이제 처음 개발을 학습하는 동료가 이해할 수 있기 쉽게 설명하려고 노력하다가 보면, 어느새 성장한 여러분의 모습을 발견하게 될 것입니다.</p>\n<h3 dir="auto">면접장에서 승리해야 하기 때문입니다.</h3>\n<p dir="auto">사실 아고라 스테이츠 질문에 대한 답변은 면접장에서 답변과 유사한 면이 많습니다. 해당 개념에 대해서 자기가 얼마나 아는지 돌아보게 되고, 정확하게 알지 못하는 내용에 대해서는 "아, 내가 부족했으니 더 공부해야겠다."라는 마음을 가지게 됩니다. 면접장에서 실패하기보다는, 더 빨리 아고라 스테이츠에서 답변을 해보고, 내가 모르는 것이 무엇이었는지 점검하고, 더 잘 설명하는 연습을 해보기를 권장합니다.</p>\n<h2 dir="auto">좋은 답변 하는 방법</h2>\n<h3 dir="auto">질문을 꼼꼼히 읽고 문제의 핵심을 파악하고 답변합니다.</h3>\n<p dir="auto">좋은 답변도 좋은 질문을 하는 방법과 비슷합니다. 우선 상대방이 무엇을 궁금해하는지 파악하는 게 우선입니다. 질문을 차근차근 읽어보고 질문자가 무엇을 궁금해하는지 파악하고 답변해주세요.</p>\n<p dir="auto">문제의 핵심을 파악하기 어려울 수 있습니다. 그런 경우에는, 최대한 합리적인 가정을 몇 개 세우고 답변하려고 노력하세요.</p>\n<p dir="auto">좋은 답변 예시</p>\n<blockquote>\n<p dir="auto">xxx 오류는 이미 검색해보셔서 아시겠지만, 다음의 경우입니다. 제가 찾아본 stack overflow 답변을 인용하면 다음과 같습니다.</p>\n<ol dir="auto">\n<li>이러이러하기 때문</li>\n<li>저러저러하기 때문</li>\n</ol>\n<p dir="auto">질문을 보니 정황상 이러이러한 근거 때문에 1번은 아니네요. 그렇다면 2번과 관련된 xxx 설정을 어떻게 하셨나요?<br>\n(혹은, 2번에 왜 설정을 이렇게 하셨나요? 해당 설정이 무엇을 의미하는지 알고 계시는가요? → 레퍼런스 첨부)<br>\n이 부분을 해결하거나 혹은 여전히 어려우시다면 추가로 시도해보신 내용을 댓글로 달아주실 수 있을까요?</p>\n</blockquote>\n<h3 dir="auto">문제에 대한 정답만 적기보다는, 정답인 이유를 구체적으로 작성해주세요.</h3>\n<p dir="auto">질문자도 대부분 정답은 알고 있는 경우가 많습니다. 정답은 알지만, 개발 관련 개념에 대해서 더 잘 알기 위해서 질문하는 거겠죠? 그렇기 때문에, 정답을 적어주더라도 그 정답이 왜 정답인지 구체적으로 설명해주셔야 합니다.</p>\n<h3 dir="auto">객관적인 근거를 기반으로 답변합니다.</h3>\n<p dir="auto">자신의 생각과 추측에 기반한 답변은 질문자의 학습을 방해합니다. 내 생각이 맞는지 아닌지 계속 고민해보세요.</p>\n<h3 dir="auto"><a href="https://urclass.codestates.com/ac48d91c-b83d-49f5-8450-6cef4401e38d?playlist=1812" rel="nofollow">코드스테이츠 커뮤니티 규정</a>을 잘 이해하고 실천해주세요.</h3>\n<p dir="auto">사람은 사람 간에 소통하면서 배울 수 있습니다. 대화하면서 배우고 성장할 수 있다는 것 자체로 축복받으신 겁니다! 하지만 안타깝게도 아직 우리 사회에는 날카로운 송곳같이 마음의 상처를 주는 대화가 많습니다. 이런 대화는 서로 간의 소통을 줄이고 성장을 가로막습니다. <a href="https://urclass.codestates.com/ac48d91c-b83d-49f5-8450-6cef4401e38d?playlist=1812" rel="nofollow">코드스테이츠 커뮤니티 규정</a>에는 서로에게 더 도움을 줄 수 있는 소통 원칙에 대해서 다루고 있습니다. 아고라 스테이츠 이용 시에도 이 원칙을 따릅니다. 특히 제 5조 핵심 원칙을 다시 한번 강조합니다.</p>\n<blockquote>\n<p dir="auto">제 5조. 핵심 원칙 지키기</p>\n<ol dir="auto">\n<li>코드스테이츠 커뮤니티는, 모든 공동체 ‘구성원’들을 따뜻하게 포용해요.</li>\n</ol>\n<p dir="auto">코드스테이츠 커뮤니티 기준은 모두가 참여할 수 있는 커뮤니티를 위해 ‘구성원’들이 지켜야 하는 최소한의 약속이며, 다음을 모두 지향하고 있습니다.</p>\n<p dir="auto">가. 성별, 성 정체성, 국적, 지역, 종교, 나이, 사회적 신분, 학력, 지식 수준, 외모, 장애, 음식 선호 등과 관계 없이 동등한 자격으로 커뮤니티 행사에 참여하는 것<br>\n나. 서로 따뜻하게 환영하는 분위기<br>\n다. 서로 다름을 인정하고 존중하는 분위기<br>\n라. 누구나 편안하게 참여하고 의견을 낼 수 있는 커뮤니티 행사</p>\n<ol start="2" dir="auto">\n<li>모든 구성원들을 포용하는 것이 중요한 이유.</li>\n</ol>\n<p dir="auto">코드스테이츠 커뮤니티 팀은, 다양성을 존중하고 따뜻하게 배려하는 것이 코드스테이츠 ‘공동체’와 우리 사회 모두를 더 건강하고 올바르게 만드는 출발점이라고 생각합니다. 어려운 문제에 대한 해결책을 서로 찾아주고, ‘공동체’가 함께 성장하여 더 많은 사람들이 긍정적인 변화를 이끌기 위해서는 다양한 시각과 의견은 필수입니다. 반대로, 이러한 시각과 의견을 듣기 위해서는 다양성을 존중하고 배려하는 따뜻한 마음에서 시작됩니다.</p>\n<ol start="3" dir="auto">\n<li>\n<p dir="auto">커뮤니티 기준의 의도, 목적을 이해해주세요.<br>\n커뮤니티 기준이, 코드스테이츠 ‘공동체’ 및 ‘구성원’들이 따르거나 해서는 안 되는 내용들이 모두 포함돼있는 것은 아닙니다. 하지만, 커뮤니티 기준 각 항목의 의도와 목적을 자세히 이해하시면 어떻게 해야 구성원 서로에게 잘 소통할 수 있을지 도움이 될 것입니다.</p>\n</li>\n<li>\n<p dir="auto">‘구성원’ 여러분들은, 모두 코드스테이츠를 대표하고 있어요.</p>\n</li>\n</ol>\n<p dir="auto">여러분들은, 코드스테이츠를 대표하는 커뮤니티 공동체 ‘구성원’ 입니다. 구직과 취업 후 재직을 하는 과정에서도 표현과 행동을 항상 주의해야 합니다. 하나의 잘못된 말이나 행동은 코드스테이츠 브랜드 이미지에 부정적인 영향을 주고, 열심히 구직과 일을 하고 있는 모든 ‘공동체’에게 피해로 돌아올 수 있다는 점을 꼭 기억해주시기 바랍니다.</p>\n</blockquote>',
    avatarUrl:
      "https://avatars.githubusercontent.com/u/12145019?s=64&u=5c97f25ee02d87898457e23c0e61b884241838e3&v=4",
  },
  {
    id: "D_kwDOHOApLM4APXTV",
    createdAt: "2022-04-22T14:09:14Z",
    title: "질문 예시",
    url: "https://github.com/codestates-seb/agora-states-fe/discussions/5",
    author: "kimploo",
    answer: null,
    bodyHTML:
      '<h2 dir="auto">질문하는 방법 예시</h2>\n<p dir="auto">제목: 함수를 실행했을 때 undefined만 반환됩니다. 콘솔에 찍으면 답은 잘 나와요.</p>\n<p dir="auto">내용:</p>\n<ul dir="auto">\n<li><strong>운영 체제:</strong> 예) macOS</li>\n<li><strong>노드 버전(node -v):</strong> 예) v14.16.0</li>\n<li><strong>현재 어떤 스프린트를 진행 중이고, 어떤 문제에 부딪혔나요?</strong><br>\n예) 문자열 코플릿 1번을 풀고 있습니다.<br>\n인자 2개(이름, 성)를 입력받아서 두 개의 문자열을 붙이되, 중간에 띄어쓰기를 작성해야 합니다.</li>\n</ul>\n<p dir="auto">인자 2개가 문자열인지 확인한 다음 맞는다면, 인자 1 + \' \' + 인자 2라고 작성했는데 계속 <strong>undefined</strong>가 나옵니다.</p>\n<ul dir="auto">\n<li><strong>안 되는 부분을 해결하기 위해서 구체적으로 어떤 노력을 했나요?</strong><br>\n예) 코드에 undefined가 아니면 반환하라고 조건을 더 붙였는데 똑같이 나옵니다.<br>\n디버깅을 하려고 console.log를 사용했는데, 값은 제대로 뜹니다.<br>\nconsole.log를 지우면 계속 undefined가 떠요.</li>\n</ul>\n<p dir="auto">에러 코드를 구글링 해 보니 undefined는 string이 아니라는 답변이 나옵니다.<br>\n제가 어디를 놓치고 있는 것일까요?</p>\n<ul dir="auto">\n<li>\n<p dir="auto"><strong>에러 코드를 붙여넣기 해 주세요.</strong><br>\nAssertionError: expected \'undefined\' to equal \'string\'<br>\nat Context. (/submission/index.test.js:20:59)<br>\nat processImmediate (internal/timers.js:456:21) ...</p>\n</li>\n<li>\n<p dir="auto"><strong>어떠한 부분에서 이해가 안 되었나요?</strong><br>\nconsole.log로 값을 찍으면 원하는 값으로 나오는데,<br>\nconsole.log를 빼고 값을 반환하려고 하면 undefined가 나옵니다.</p>\n</li>\n<li>\n<p dir="auto"><strong>에러가 출력된 곳에서, 이유라고 생각하는 부분을 열 줄 이내로 붙여넣기 해 주세요. (잘 모르겠으면 에러라고 생각하는 곳을 넣어주세요)</strong></p>\n</li>\n</ul>\n<div class="highlight highlight-source-js position-relative overflow-auto" data-snippet-clipboard-copy-content="\nfunction getFullName(firstName, lastName) {\n\tif(typeof firstName !== undefined &amp;&amp; typeof lastName !== undefined) {\n\t\tfirstName + \' \' + lastName;\n\t\t// console.log(firstName + \' \' + lastName) 얘는 잘 나와요\n\t}\n}"><pre><span class="pl-k">function</span> <span class="pl-en">getFullName</span><span class="pl-kos">(</span><span class="pl-s1">firstName</span><span class="pl-kos">,</span> <span class="pl-s1">lastName</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>\n\t<span class="pl-k">if</span><span class="pl-kos">(</span><span class="pl-k">typeof</span> <span class="pl-s1">firstName</span> <span class="pl-c1">!==</span> <span class="pl-c1">undefined</span> <span class="pl-c1">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-s1">lastName</span> <span class="pl-c1">!==</span> <span class="pl-c1">undefined</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>\n\t\t<span class="pl-s1">firstName</span> <span class="pl-c1">+</span> <span class="pl-s">\' \'</span> <span class="pl-c1">+</span> <span class="pl-s1">lastName</span><span class="pl-kos">;</span>\n\t\t<span class="pl-c">// console.log(firstName + \' \' + lastName) 얘는 잘 나와요</span>\n\t<span class="pl-kos">}</span>\n<span class="pl-kos">}</span></pre></div>\n<ul dir="auto">\n<li><strong>검색했던 링크가 있다면 첨부해 주세요.</strong><br>\n<a href="https://stackoverflow.com/questions/51603051/javascript-functions-return-undefined" rel="nofollow">https://stackoverflow.com/questions/51603051/javascript-functions-return-undefined</a></li>\n</ul>\n<hr>\n<h2 dir="auto">잘못된 예시</h2>\n<p dir="auto">제목: 문자열 코플릿 10번 안 돼요</p>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113249242-55dd2380-92f9-11eb-9a5a-d6c9912b936f.png"><img width="409" alt="스크린샷 2021-04-01 오후 2 48 24" src="https://user-images.githubusercontent.com/59815596/113249242-55dd2380-92f9-11eb-9a5a-d6c9912b936f.png" style="max-width: 100%;"></a></p>\n<p dir="auto">해 봤는데 안되네요. 이유가 뭘까요? 알려주세요. ㅠㅠ 이것 때문에 밤새웠어요..</p>',
    avatarUrl:
      "https://avatars.githubusercontent.com/u/12145019?s=64&u=5c97f25ee02d87898457e23c0e61b884241838e3&v=4",
  },
  {
    id: "D_kwDOHOApLM4APXTS",
    createdAt: "2022-04-22T14:08:33Z",
    title: "좋은 질문하는 법",
    url: "https://github.com/codestates-seb/agora-states-fe/discussions/4",
    author: "kimploo",
    answer: null,
    bodyHTML:
      '<blockquote>\n<p dir="auto">Table of Contents</p>\n<ul dir="auto">\n<li>왜 좋은 질문을 할 줄 알아야 하나요?\n<ul dir="auto">\n<li>실력이 뛰어난 개발자는 잘 질문하기 때문입니다.</li>\n</ul>\n</li>\n<li>좋은 질문하는 방법\n<ul dir="auto">\n<li>질문하기 전에 먼저 검색하자!</li>\n<li>내 문제를 설명하는 키워드를 찾자!</li>\n<li>일단 질문하세요. JUST ASK!</li>\n<li>질문에 좋은 제목을 달자!</li>\n<li>코드를 붙여넣기 전에 현재 상황을 먼저 설명하자!</li>\n<li>당신이 처해 있는 문제를 다른 사람이 재연할 수 있도록 정보를 제공하자!</li>\n</ul>\n</li>\n<li>질문자로서 해야 할 마지막 임무\n<ul dir="auto">\n<li>만약 누군가 당신의 질문에 도움을 주었다면, 그 답변으로 인해 문제를 어떻게 해결했는지 서술하고 진심으로 감사를 전하세요.</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 dir="auto">왜 좋은 질문을 할 줄 알아야 하나요?</h2>\n<h3 dir="auto">실력이 뛰어난 개발자는 잘 질문합니다.</h3>\n<blockquote>\n<p dir="auto">... there also were less expected findings. In particular, the importance of social skills was highlighted, even for so technical a task as code reading.<br>\n(잘 알려진 바와 다르게,) 기대한 것과 다른 연구 결과를 찾을 수도 있었다. 특이하게도, 코드 해석과 같은 아주 기술적인 업무에서도 사회적 스킬의 중요성이 강조되었다.</p>\n<ul dir="auto">\n<li><a href="https://link.springer.com/chapter/10.1007/BFb0024298" rel="nofollow">What we have learned about software engineering expertise</a></li>\n</ul>\n</blockquote>\n<p dir="auto">많은 미디어에서 개발자는 골방에서 컴퓨터만 바라보다가 뭔가 해내는 모습으로 비칩니다. 하지만 소프트웨어 개발 전문가에 대한 많은 연구에서는 개발자의 사회적인 측면을 강조합니다. 자기가 잘 모르는 내용에 대해서 부드럽게 물어볼 수 있고, 동료나 후배 개발자에게 자기가 아는 내용에 대해서 긍정적인 피드백을 줄 수 있는 개발자가 실제 성과도 뛰어납니다. 여러분도 마찬가지로 질문할 용기를 가져야 합니다. 모르는 것은 부끄러운 게 아닙니다. 모르는 것을 질문하는 게 부끄러워서 넘어가는 것이 부끄러운 것입니다.</p>\n<h3 dir="auto">실력이 뛰어난 개발자가 되기 위해, 좋은 질문하는 방법을 배웁시다.</h3>\n<p dir="auto">개발 관련 기술은 시시각각으로 변화하고, 개발자는 계속 학습해야 합니다. 10년 차 개발자가 되어도 계속 모르는 게 생기기 때문에 <strong>좋은 질문하는 법</strong>을 익혀야 합니다. 슈퍼 개발자로의 폭발적인 성장을 위해, 커리큘럼 진행하는 동안, 이 질문하는 방법을 자주 읽고 숙달하시기 바랍니다.</p>\n<h2 dir="auto">좋은 질문하는 방법 1: 질문하기 전에 먼저 검색하자!</h2>\n<h3 dir="auto">검색은 좋은 질문의 시작입니다.</h3>\n<p dir="auto">"내 온전한 실력으로 모든 문제를 해결할 거야!"라고 생각하는 분이 계시는가요? 아쉽지만 더 느린 길을 선택하셨습니다.<br>\n왜 더 느린 길일까요?</p>\n<blockquote>\n<p dir="auto">Don\'t reinvent the wheel.<br>\n이미 발명된 바퀴를 다시 발명할 필요가 없다.</p>\n</blockquote>\n<p dir="auto">여러분들이 겪는 문제는 전 세계의 선배 개발자들이 이미 고민하고 해결된 문제입니다. 검색하고 학습하는 방법에 익숙해지면 직접 문제 해결하는 시간보다, 검색하여 문제를 해결하는 시간이 훨씬 빨라질 겁니다.</p>\n<h3 dir="auto">검색으로 자신의 문제점을 더 정확하게 찾을 수 있습니다.</h3>\n<p dir="auto">개발 학습을 하다가 보면, "도대체 뭐가 잘못된 것인지도 모르겠다..."라는 생각이 드실 때가 있을 겁니다. 이제 처음 배우는 단계라서 모르는 것은 당연합니다. 선배 개발자들도 마찬가지입니다. 이미 여러분과 같은 "도대체 뭐가 잘못된 것인지도 모르겠다..."부터 시작해서 해답을 찾았을 것입니다.</p>\n<p dir="auto">문제 해결을 위해 검색하다가 보면 이런 선배 개발자들의 고민 흔적을 찾아볼 수 있습니다. 그 고민의 여정을 함께 경험하고 여러분도 같이 배우실 수 있습니다. 특히, 내 질문과 똑같은 질문인지 아닌지 파악하는 과정에서 "아! 내가 겪고 있는 문제가 이거구나!"라는 깨달음을 얻을 수도 있습니다. 문제점을 잘 알았으니 더 나은 질문도 할 수 있겠죠?</p>\n<h2 dir="auto">좋은 질문하는 방법 2: 내 문제를 설명하는 키워드를 찾자!</h2>\n<h3 dir="auto">내 문제를 한 번에 설명할 수 있는 \'그 단어\'를 찾자!</h3>\n<p dir="auto">검색을 통해서 해답을 바로 얻기 어려울 수 있습니다. 그러나, <strong>더 나은 질문 키워드</strong>를 얻어낼 수 있습니다.</p>\n<p dir="auto">자기 상황을 설명하기 어려운 경우가 종종 발생합니다. 충분히 이해합니다. 이 상황을 표현할 수 있는 한 단어가 있을 겁니다. 그러나 여러분은 당연히 모를 것입니다. 배운 적이 없기 때문입니다. 그러므로 그 키워드를 얻기 위해서 여러분은 현재 상황을 여러 각도로 검색해 봐야 합니다.</p>\n<p dir="auto">\'그 단어\'를 아는 사람은 더 빨리 검색하거나 질문할 수 있습니다. 그러나 우리는 그것을 모르기 때문에 찾아내는 연습부터 해야 합니다. 키워드를 찾아내면 더 나은 질문을 빠르게 할 수 있고 그 경험치를 통해서 더 좋은 질문을 할 수 있는 실력을 갖추게 됩니다. 이를 반복하면, 여러분은 코드를 붙이지 않고서도 키워드를 포함한 질문만으로 답변을 얻어낼 수 있는 경지가 올 것입니다.</p>\n<h3 dir="auto">\'그 단어\' 찾기 팁</h3>\n<p dir="auto">Tip 1 : 검색 포털은 \'구글\'을 이용하세요! 주로 이용하는 네**나 다* 같은 대형 검색 포털은 이용자의 다수가 한국에 국한되어 있지만 구글은 전 세계를 대상으로 답변을 찾을 수 있습니다.</p>\n<p dir="auto">Tip 2: 마법의 단어 <strong>how to</strong>로 구글 검색을 시작해 보세요.</p>\n<p dir="auto">ex)</p>\n<ul dir="auto">\n<li>how to resolve 404 error in github</li>\n<li>how to use for-each loop in java</li>\n<li>how to implement infinite scroll in thymeleaf</li>\n</ul>\n<p dir="auto">Tip 3: 두 개념의 차이를 알고 싶으면 <strong>difference between A and B</strong>로 구글 검색을 시작해 보세요.</p>\n<p dir="auto">ex)</p>\n<ul dir="auto">\n<li>difference between let and const</li>\n<li>difference between function expression and function declaration</li>\n</ul>\n<p dir="auto">Tip 4. 영어를 수월하게 하지 못한다고 두려워하지 마세요, 꼭 완벽한 문법이 아니더라도 적절한 키워드들이 조합된다면, 충분히 이후의 검색 방향을 발견할 수 있습니다.</p>\n<h2 dir="auto">좋은 질문하는 방법 3: 일단 질문하세요. JUST ASK!</h2>\n<p dir="auto">동방예의지국인 우리나라 사람 대부분은 질문하는 것이 어렵습니다. 정확하게 뭘 알아야만 질문할 수 있고, 질문의 수준도 높아야 할 것만 같고... 하지만, 이제부터 적어도 개발 관련 질문에 있어서는 질문하려고 노력해봅시다.</p>\n<h3 dir="auto">질문하기가 어려워요.</h3>\n<p dir="auto">개발을 처음 학습하는 분들 대부분이 질문하기가 어렵다고 합니다. 왜 그럴까요?</p>\n<ol dir="auto">\n<li><strong>내가 현재 겪고 있는 문제의 상황을 설명하기가 쉽지 않다.</strong></li>\n</ol>\n<p dir="auto">영어로 따지면 아직 "I\'m a boy"도 모르고, 주어와 동사의 차이도 구분할 수 없는 단계입니다. 영어 문장의 요소에 대해서 아직 설명할 수 있는 능력도 부족하고 해당 요소를 뭐라고 부르는지도 모르는 상황에서 질문을 하기는 어렵습니다.</p>\n<p dir="auto">그래서 우선 기초 학습에 충실하고, 암기할 내용이 있으면 암기하고, 처음 나오는 기술 용어가 어떤 문맥에서 쓰이는지 제대로 파악하는 게 중요합니다. 그래야 지금의 문제를 잘 표현할 수 있겠죠.</p>\n<ol start="2" dir="auto">\n<li><strong>질문하기가 두렵다.</strong></li>\n</ol>\n<p dir="auto">이 부분은 단호하게 말씀드리면, 두려워하지 않으셔야 합니다. 완벽한 질문을 기다리기 보다는 불완전한 질문을 여러 번 해보는 게 더 빠르게 좋은 질문을 하는 방법입니다.</p>\n<p dir="auto">만약 여러분의 정성을 들이지 않은 질문에 책망의 답변이 온다면, 그 사람을 미워하지 말기를 바랍니다. 이를 받아들이고, 본인을 발전시키는 데 밑거름으로 쓰려는 자세를 가지기를 바랍니다. 질문을 어떻게 정성 들여 작성해야 할지 모르겠다면, <strong>틀릴 수 있는 용기를</strong> 반드시 가져야 합니다.</p>\n<ol start="3" dir="auto">\n<li><strong>질문하는 것 자체가 너무 번거롭거나, 아니면 내 질문으로 남을 귀찮게 하고 싶지 않다.</strong></li>\n</ol>\n<p dir="auto">좋은 개발자의 덕목을 다시 한번 기억해주시기를 바랍니다. 높은 성과를 내는 개발자는 단지 해당 기술에 대해서 깊게 알고 능숙하게 다루는 것만 잘 하지 않습니다. 동료나 후배가 자기와 함께 더 높은 성과를 낼 수 있게 잘 듣고, 발전적인 피드백을 줍니다. 자기가 잘 모르는 것을 부끄러워하지 않고, 좋은 질문을 합니다. 좋은 질문을 고민하는 과정에서 성장합니다.</p>\n<p dir="auto">폭발적인 성장을 위해서 꼭 필요한 과정이라고 생각해주시고, 질문해주시기를 바랍니다. 뒤로 미루기만 하면 당신은 빠르게 성장하지 못하게 됩니다. <strong>이 세상에 바보 같은 질문은 없습니다. Learn by Questioning!</strong></p>\n<h2 dir="auto">좋은 질문하는 방법 4: 질문에 좋은 제목을 달자!</h2>\n<h3 dir="auto">좋은 질문의 첫 번째 조건은, 좋은 제목입니다.</h3>\n<p dir="auto">제목에 에러 로그를 그대로 집어넣는 사람이 있습니다.<br>\n반면에 제목만 보고도 답변을 달 수 있는 좋은 네이밍을 가진 제목이 있습니다.</p>\n<p dir="auto">예를 하나 보겠습니다.</p>\n<ul dir="auto">\n<li><strong>Bad :  "코플릿 알고리즘 00번 질문입니다."</strong><br>\n답변자는 여러분이 어떤 문제를 풀고 있는지 알 필요가 없습니다.<br>\n어떤 것을 질문할지도 예상할 수 없는 제목입니다.</li>\n<li><strong>Good : "array의 reduce 메서드 사용 시 accumulator 인자의 작동이 이해되지 않습니다."</strong><br>\n제목만 보고도 어떤 답을 해 줘야 할지 판단이 됩니다.</li>\n</ul>\n<h3 dir="auto">바쁜 동료에게 물어본다고 생각하고 질문을 작성하세요.</h3>\n<p dir="auto">그 누구도 5, 6개 문단으로 이루어진 논문 같은 질문 글을 한 시간 동안 앉아서 봐 줄 사람은 없습니다.<br>\n앞으로도 없고, 영원히 없을 겁니다.<br>\n지나치게 길게 쓰는 것도 좋지 않습니다. 질문 포인트를 쉽게 잃어버릴 수 있기 때문입니다.<br>\n본인이 명확하게 모르는 부분에 대해서 스스로 <strong>퇴고</strong>해야 합니다.</p>\n<p dir="auto">만약 당장 여러분의 질문을 요약하는 데 어려움이 있다면, 먼저 글을 작성한 후에, 나중에 제목을 써도 좋습니다.<br>\n오히려 글 내용을 바탕으로 질문을 작성하는 좋은 연습이 될 것입니다.</p>\n<h2 dir="auto">좋은 질문하는 방법 5: 코드를 붙여넣기 전에 현재 상황을 먼저 설명하자!</h2>\n<p dir="auto"><strong>여러분의 상황은 두 가지 정보를 통해 전달할 수 있습니다.</strong></p>\n<ol dir="auto">\n<li>내가 문제 해결을 위해 시도한 흔적</li>\n<li>그 시도들로 인해 얻은 오답</li>\n</ol>\n<p dir="auto">질문으로 진입하기 전, Intro가 필요합니다.<br>\n내 상황을 이해시키는 과정이 있어야 답변자가 그 의도를 더 빠르게 파악하고 키워드나 답변을 제공할 수 있습니다.</p>\n<h2 dir="auto">좋은 질문 하는 방법 6. 당신이 처해 있는 문제를 다른 사람이 재연할 수 있도록 정보를 제공하자!</h2>\n<p dir="auto">여러분이 처한 상황을 설명하기가 굉장히 까다로울 때가 있습니다.<br>\n<strong>그렇다면 문제 상황을 재연할 수 있도록 정보를 제공해야 합니다.<br>\n전체 코드를 올리라는 말이 절대 아닙니다.<br>\n더군다나, 코드 이미지 캡처는 더더욱 아닙니다. 이미지는 코드를 드래그해서 복사할 수 없기 때문에 재연이 매우 힘듭니다.</strong></p>\n<p dir="auto">코드 작성 시, <strong>code snippet</strong>을 활용합니다. (만약 code snippet이 무엇인지 모르고, 검색하는 방법도 몰랐다면, 여러분은 이제 code snippet에 대해 정보를 찾기 위해 검색할 수 있습니다.)</p>\n<h2 dir="auto">질문자로서 해야 할 마지막 임무</h2>\n<p dir="auto">만약 누군가 당신의 질문에 도움을 주었다면,<br>\n<strong>그 답변으로 인해 문제를 어떻게 해결했는지 서술하고 진심으로 감사를 전하도록 합니다.</strong></p>\n<blockquote>\n<p dir="auto"><g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png">💡</g-emoji><br>\nGithub Discussions에는 Check라는 아주 좋은 기능이 있습니다! 답변을 받았다면, 해당 답변에 초록색 체크를 눌러 주세요!</p>\n</blockquote>\n<p dir="auto">이 질문의 기록은 질문자와 답변자, 후에 이 기록을 찾아볼 모든 사람에게 도움이 됩니다.<br>\n답변을 받았다고 해서 그냥 넘어가 버리면 안 됩니다.<br>\n답변을 진심으로 이해하고, 내 상황의 어떤 부분이 문제였고 어떻게 해결했는지에 대한 간단한 기록을 마지막으로 남겨 주어야 나와 모두가 성장할 수 있는 소중한 기록이 됩니다.</p>\n<p dir="auto"><strong>질문하는 것 자체가 개발의 일부분입니다. 질문을 피할 수 없다면, 꾸준히 제대로 질문하는 연습을 해 봅시다.</strong></p>\n<h2 dir="auto">So, What I have to Do</h2>\n<ol dir="auto">\n<li><strong>발생한 에러 코드, 궁금한 것을 검색(구글링)한다. (search for min 1h - 경우에 따라 다름)</strong><br>\n코드스테이츠는 ****여러분이 귀찮아 하는 것이 아닙니다. 차라리 직접적으로, 바로 가르쳐주는 것이 덜 귀찮습니다. 그런데도 이를 권장하는 속뜻에 대해서 이해해 보시길 바랍니다.</li>\n<li><strong>여러분이 할 수 있는 것을 최대한 해 본 다음에, 가이드에 따라 agora-states를 이용한다.</strong><br>\n여러분이 수강하는 커리큘럼 안에, \'agora-states를 반드시 이용하여 질문 작성을 연습해 보는 내용\'이 포함되어 있습니다. 가이드에 따라 질문하는 것을 적극적으로 권장합니다.<br>\n또한 다른 사람들의 질문 글들을 보면서, 내가 답할 수 있는 글에는 답변을 달아보는 것도 권장합니다.<br>\nagora-states를 통해 질문하고 답변하는 일은 스스로에게 매우 좋은 경험이 됩니다.</li>\n<li><strong>agora-states에서 제공 받은 답변에 따라 문제를 해결하려 하고, 문제가 해결되지 않는 경우 1, 2번을</strong> <strong>반복한다.</strong><br>\n답변으로 주어진 Keyword들이나 action item을 가지고 다시 1, 2번을 반복합니다. "그게 뭔가요?" 라는 무책임한 질문을 되풀이하지 말기를 바랍니다.</li>\n</ol>\n<p dir="auto"><strong>검색은 예전부터 많이 하던 사람이 더 잘할 수밖에 없습니다.<br>\n경험이 없다면, 당장 지금부터라도 경험을 쌓으면 됩니다.</strong></p>\n<ul dir="auto">\n<li><a href="https://www.lifehack.org/articles/technology/20-tips-use-google-search-efficiently.html" rel="nofollow">구글 검색을 더 효과적으로 하는 20가지 Tips</a></li>\n<li><a href="https://stackoverflow.com/help/how-to-ask" rel="nofollow">stackoverflow의 how to ask</a></li>\n</ul>\n<h2 dir="auto">QnA</h2>\n<ol dir="auto">\n<li>\n<p dir="auto"><strong>이 문서를 보고 질문하기가 무서워져서 더 못하겠습니다.</strong><br>\n→ 본인이 생각하기에 바보 같은 질문, 하셔도 됩니다! 하지만 충분히 정성을 들여서 질문 해 주시면 좋겠습니다.<br>\n내 질문이 바보 같은지 아닌지도 판단하기 어렵다면, 일단 질문하고 첨언으로 답변자에게 조언을 요청해 보세요. 조금 더 나은 질문을 하려면 어떻게 할 수 있을지 조언을 받게 되면, 여러분의 질문 실력은 훨씬 빠르게 향상될 것입니다.<br>\n이 문서는 당장 손 닿는 사람에게 도움을 구하기보다는, 여러분이 직접 질문 글을 작성해 보고 그 과정을 통해서 문제를 해결하는 경험을 꼭 가지고 가도록 하기 위해서 작성되었습니다.<br>\n여러분이 현업으로 나가게 되면, 이 스킬로 수백 번, 수천 번 문제를 해결 해야 합니다.<br>\n그렇다면 이 부트캠프 안에서 충분히 경험을 가지고 나가도록 합시다!</p>\n</li>\n<li>\n<p dir="auto"><strong>검색하는 형태를 개선할 수 있는 방법이 어떤 게 있을까요?</strong><br>\n내가 어설프게 검색해서 나온 질문 글 중 상위에 rank 되어 있는 괜찮은 질문을 보고,<br>\n\'아, 이렇게 질문을 작성하면 더 좋은 답변을 받을 수 있구나.\' 하고 학습할 수 있습니다.<br>\n해당 질문에 대한 답변뿐만 아니라, 올바른 질문 법, 정확한 키워드까지 얻어갈 수 있는 방법입니다.<br>\n반응을 많이 얻은 질문 글을 보고, 이 글이 어떻게 쓰였는지 분석해보는 시간을 가지기를 권장합니다.</p>\n</li>\n</ol>',
    avatarUrl:
      "https://avatars.githubusercontent.com/u/12145019?s=64&u=5c97f25ee02d87898457e23c0e61b884241838e3&v=4",
  },
  {
    id: "D_kwDOHOApLM4APXTQ",
    createdAt: "2022-04-22T14:07:35Z",
    title: "마크다운 사용법",
    url: "https://github.com/codestates-seb/agora-states-fe/discussions/3",
    author: "kimploo",
    answer: null,
    bodyHTML:
      '<p dir="auto">Agora States에서 질문을 작성할 때 우리는 <a href="https://www.markdownguide.org/basic-syntax/" rel="nofollow">markdown</a>이라는 문법 형식을 사용해서 글을 작성합니다.<br>\nmarkdown 문법 중에서 꼭 필요한 것들만 살펴 봅시다!</p>\n<h3 dir="auto">1. 글씨 크기 조절하기</h3>\n<p dir="auto">markdwon을 사용해 6가지의 글씨 크기를 표현할 수 있습니다.</p>\n<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="# 첫 번째\n## 두 번째\n### 세 번째\n#### 네 번째\n##### 다섯 번째\n###### 여섯 번째"><pre class="notranslate"><code class="notranslate"># 첫 번째\n## 두 번째\n### 세 번째\n#### 네 번째\n##### 다섯 번째\n###### 여섯 번째\n</code></pre></div>\n<h1 dir="auto">첫 번째</h1>\n<h2 dir="auto">두 번째</h2>\n<h3 dir="auto">세 번째</h3>\n<h4 dir="auto">네 번째</h4>\n<h5 dir="auto">다섯 번째</h5>\n<h6 dir="auto">여섯 번째</h6>\n<h3 dir="auto">2. 글씨 강조하기</h3>\n<p dir="auto">markdown을 사용하면 쉽게 글씨를 강조할 수 있습니다.</p>\n<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="*기운 글씨*\n**두꺼운 글씨**"><pre class="notranslate"><code class="notranslate">*기운 글씨*\n**두꺼운 글씨**\n</code></pre></div>\n<p dir="auto"><em>기운 글씨</em></p>\n<p dir="auto"><strong>두꺼운 글씨</strong></p>\n<h3 dir="auto">3. 리스트 형식</h3>\n<p dir="auto">리스트 형식으로 표현할 수 있습니다.</p>\n<div class="snippet-clipboard-content position-relative overflow-auto" data-snippet-clipboard-copy-content="1. 첫 번째\n2. 두 번째\n3. 세 번째\n\n* 순서 없음\n* 순서 없음\n* 순서 없음"><pre class="notranslate"><code class="notranslate">1. 첫 번째\n2. 두 번째\n3. 세 번째\n\n* 순서 없음\n* 순서 없음\n* 순서 없음\n</code></pre></div>\n<ol dir="auto">\n<li>첫 번째</li>\n<li>두 번째</li>\n<li>세 번째</li>\n</ol>\n<ul dir="auto">\n<li>순서 없음</li>\n<li>순서 없음</li>\n<li>순서 없음</li>\n</ul>\n<h3 dir="auto">4. 코드 예쁘게 쓰기 ☜（ﾟ∀ﾟ☜） 중요!</h3>\n<p dir="auto">여러분이 올린 질문을 읽을 사람들을 위해 예쁘게 정리 된 코드를 입력해 주세요! <code class="notranslate">```java```</code> block을 활용해 보세요!</p>\n<pre class="notranslate">```java\n이 안쪽에 코드를 넣으면 코드가 예쁘게 보입니다.\n\nString greeting = "Hello World!";\n\nSystem.out.println(greeting); // "Hello World!"\n```\n\n</pre>\n<div class="highlight highlight-source-java position-relative overflow-auto" data-snippet-clipboard-copy-content="// 출력되는 코드!\n\nString greeting = &quot;Hello World!&quot;;\n\nSystem.out.println(greeting); // &quot;Hello World!&quot;"><pre><span class="pl-c">// 출력되는 코드!</span>\n\n<span class="pl-smi">String</span> <span class="pl-s1">greeting</span> = <span class="pl-s">"Hello World!"</span>;\n\n<span class="pl-smi">System</span>.<span class="pl-s1">out</span>.<span class="pl-en">println</span>(<span class="pl-s1">greeting</span>); <span class="pl-c">// "Hello World!"</span></pre></div>\n<p dir="auto">markdown을 사용해 Agora States를 <strong>많이 많이</strong> 이용해 주세요!</p>',
    avatarUrl:
      "https://avatars.githubusercontent.com/u/12145019?s=64&u=5c97f25ee02d87898457e23c0e61b884241838e3&v=4",
  },
  {
    id: "D_kwDOHOApLM4APXTN",
    createdAt: "2022-04-22T14:06:03Z",
    title: "질문 템플릿",
    url: "https://github.com/codestates-seb/agora-states-fe/discussions/2",
    author: "kimploo",
    answer: null,
    bodyHTML:
      '<h1 dir="auto">Question Template</h1>\n<h3 dir="auto">제목은 질문의 맥락을 파악할 수 있게 작성해주세요. 아래의 예시를 참고해주세요.</h3>\n<blockquote>\n<p dir="auto">토이 18번 문제가 이해가 잘 안됩니다. (X)<br>\n토이 18_getItemFromTwoSortedArrays 레퍼런스에서 O(logK)로직의 조건문들이 이해가 잘 되지 않습니다.(O)</p>\n</blockquote>\n<p dir="auto">--------------- 여기서부터 복사하세요 ---------------</p>\n<ul dir="auto">\n<li>\n<p dir="auto">운영 체제: 예) macOS, Ubuntu</p>\n</li>\n<li>\n<p dir="auto">Node.js 버전(<code class="notranslate">node -v</code>): 예)v14.16.0</p>\n</li>\n<li>\n<p dir="auto">현재 어떤 챕터/연습문제/과제를 진행 중이고, 어떤 문제에 부딪혔나요?</p>\n</li>\n<li>\n<p dir="auto">어떠한 부분에서 이해가 안 되었나요?</p>\n</li>\n<li>\n<p dir="auto">에러 코드를 붙여넣기 해 주세요.</p>\n</li>\n<li>\n<p dir="auto">에러가 출력된 곳에서, 이유라고 생각하는 부분을 열 줄 이내로 붙여넣기 해 주세요. (잘 모르겠으면 에러라고 생각하는 곳을 넣어주세요)<br>\n```jsx<br>\n//여기에 작성해 주세요<br>\n```</p>\n</li>\n<li>\n<p dir="auto">검색했던 링크가 있다면 첨부해 주세요.</p>\n</li>\n</ul>\n<hr>\n<h2 dir="auto">saved reply 사용법</h2>\n<blockquote>\n<p dir="auto">잠깐! saved reply란?<br>\n원하는 문구를 저장해서 간단하게 꺼내 쓸 수 있는 github discussions만의 기능입니다.<br>\n매번 질문 템플릿을 복사하지 말고, 저장한 뒤에 꺼내서 쓰세요!</p>\n</blockquote>\n<ol dir="auto">\n<li>Discussions에서 newdiscussion 버튼을 클릭합니다.</li>\n</ol>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113290773-0fa1b780-932d-11eb-81fe-f031408bfc9f.png"><img width="1071" alt="스크린샷 2021-04-01 오후 8 57 36" src="https://user-images.githubusercontent.com/59815596/113290773-0fa1b780-932d-11eb-81fe-f031408bfc9f.png" style="max-width: 100%;"></a></p>\n<ol start="2" dir="auto">\n<li>에디터의 맨 오른쪽 "꺾인 화살표" 모양을 클릭합니다.</li>\n</ol>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113253588-6349dc00-9300-11eb-9065-d483b86cd773.png"><img width="735" alt="1" src="https://user-images.githubusercontent.com/59815596/113253588-6349dc00-9300-11eb-9065-d483b86cd773.png" style="max-width: 100%;"></a></p>\n<ol start="3" dir="auto">\n<li>이러한 창이 나오게 됩니다.</li>\n</ol>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113253613-6ba21700-9300-11eb-8e93-59cf45121822.png"><img width="1021" alt="2" src="https://user-images.githubusercontent.com/59815596/113253613-6ba21700-9300-11eb-8e93-59cf45121822.png" style="max-width: 100%;"></a></p>\n<ol start="4" dir="auto">\n<li>제목(본인이 구분하기에 편한 이름)을 작성하고, 위에 있는 템플릿을 복사하여 내용에 붙여넣은 뒤, Add saved reply 버튼을 클릭하면 템플릿이 저장됩니다.</li>\n</ol>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113253654-7eb4e700-9300-11eb-90ff-8d1bc1a1f5cf.png"><img width="775" alt="3" src="https://user-images.githubusercontent.com/59815596/113253654-7eb4e700-9300-11eb-90ff-8d1bc1a1f5cf.png" style="max-width: 100%;"></a></p>\n<ol start="5" dir="auto">\n<li>사용하실 때, 에디터의 맨 오른쪽 "꺾인 화살표" 모양을 클릭하면 저장해 두었던 템플릿이 나옵니다. 클릭해서 사용하시면 됩니다.</li>\n</ol>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113253666-85435e80-9300-11eb-9224-736a8625c84c.png"><img width="718" alt="4" src="https://user-images.githubusercontent.com/59815596/113253666-85435e80-9300-11eb-9224-736a8625c84c.png" style="max-width: 100%;"></a></p>\n<ol start="6" dir="auto">\n<li>완성</li>\n</ol>\n<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/59815596/113253681-8c6a6c80-9300-11eb-9409-b299de50aea3.png"><img width="720" alt="5" src="https://user-images.githubusercontent.com/59815596/113253681-8c6a6c80-9300-11eb-9409-b299de50aea3.png" style="max-width: 100%;"></a></p>',
    avatarUrl:
      "https://avatars.githubusercontent.com/u/12145019?s=64&u=5c97f25ee02d87898457e23c0e61b884241838e3&v=4",
  }
]

export default noticedata;